* Btree and Subsumption Test
** TODO Btree
*** DONE Structure
**** DONE Abstract Node
Definitions of behaviours, prior to being added to the tree
**** DONE Reified Node
Actual working tree nodes, that use a particular specificity of a behaviour
**** DONE Root Node
defaults to assuming an initial tree
**** DONE Branch Nodes
**** DONE Leaf Nodes
No different from other nodes, just without children, will execute actions then complete
*** TODO Semantics
**** DONE Working Tree
Based on the root node, nothing particularly special
**** DONE Conflict Set
Maintained automatically as nodes are created or failed.
Addition to the conflict set takes place in the BTreeNodeReal constructor
Removal occurs in BTreeNodeReal cleanup
***** TODO Implement conflict set as a heap
**** TODO Node Type: Sequential / Parallel / Choice
***** DONE Sequential
Progress sequentially through the list of children, 
if one fails, the sequential behaviour itself fails
***** DONE Parallel
***** TODO Choice
**** Conditions
***** DONE Entry
***** DONE Wait
***** DONE Exit
***** DONE Failure
***** TODO Continual
***** TODO Binding
****** TODO bind string creation to the Real Node
****** TODO % operator in exclusion logic
****** TODO integrate bindings in tests
**** DONE Update Step
Now selects from the top n based on priority from the conflict set.
**** DONE Persistence
Persistence achieved with persist conditions, persistence state, 
and a persist check in the cleanup routine. Guarding against infinite loops 
of cleanup -> parent inform -> cleanup by removing from parent's children first,
then re-adding.
**** Unit Tests
**** TODO Flesh out the README
